// On the Judge0 IDE, Bosque (https://github.com/microsoft/BosqueLanguage)
// is automatically updated every hour to the latest commit on master branch.

namespace NSMain;

concept WithName {
    invariant $name != "";

    field name: String;
}

concept Greeting {
    abstract method sayHello(): String;

    virtual method sayGoodbye(): String {
        return "goodbye";
    }
}

entity GenericGreeting provides Greeting {
    const instance: GenericGreeting = GenericGreeting@{};

    override method sayHello(): String {
        return "hello world";
    }
}

entity NamedGreeting provides WithName, Greeting {
    override method sayHello(): String {
        return String::concat("hello", " ", this.name);
    }
}

entrypoint function main(arg?: String): String {
    var val = arg ?| "";
    if (val == "1") {
        return GenericGreeting@{}.sayHello();
    }
    elif (val == "2") {
        return GenericGreeting::instance.sayHello();
    }
    else {
        return NamedGreeting@{name="bob"}.sayHello();
    }
}